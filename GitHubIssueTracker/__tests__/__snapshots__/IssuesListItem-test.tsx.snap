// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly <FooterComponentView hasPrevPage={false} hasNextPage={false} issuesCurrentPage={1}/> 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-around",
        "marginBottom": 0,
        "marginLeft": 10,
        "marginRight": 10,
        "marginTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
        },
      ]
    }
  />
  <Text
    style={
      Array [
        Object {
          "color": "#FFFFFF",
          "fontWeight": "bold",
        },
      ]
    }
  >
    1 page
  </Text>
  <View
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
        },
      ]
    }
  />
</View>
`;

exports[`renders correctly <FooterComponentView hasPrevPage={false} hasNextPage={true} issuesCurrentPage={1}/> 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-around",
        "marginBottom": 0,
        "marginLeft": 10,
        "marginRight": 10,
        "marginTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
        },
      ]
    }
  >
    <View
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 12,
          "justifyContent": "center",
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 10,
          "paddingRight": 10,
          "paddingTop": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 20,
            },
            undefined,
            Object {
              "fontFamily": "Material Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
  <Text
    style={
      Array [
        Object {
          "color": "#FFFFFF",
          "fontWeight": "bold",
        },
      ]
    }
  >
    1 page
  </Text>
  <View
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
        },
      ]
    }
  />
</View>
`;

exports[`renders correctly <FooterComponentView hasPrevPage={true} hasNextPage={false} issuesCurrentPage={1}/> 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-around",
        "marginBottom": 0,
        "marginLeft": 10,
        "marginRight": 10,
        "marginTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
        },
      ]
    }
  />
  <Text
    style={
      Array [
        Object {
          "color": "#FFFFFF",
          "fontWeight": "bold",
        },
      ]
    }
  >
    1 page
  </Text>
  <View
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
        },
      ]
    }
  >
    <View
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 12,
          "justifyContent": "center",
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 10,
          "paddingRight": 10,
          "paddingTop": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 20,
            },
            undefined,
            Object {
              "fontFamily": "Material Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders correctly <FooterComponentView hasPrevPage={true} hasNextPage={true} issuesCurrentPage={1}/> 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-around",
        "marginBottom": 0,
        "marginLeft": 10,
        "marginRight": 10,
        "marginTop": 10,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
        },
      ]
    }
  >
    <View
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 12,
          "justifyContent": "center",
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 10,
          "paddingRight": 10,
          "paddingTop": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 20,
            },
            undefined,
            Object {
              "fontFamily": "Material Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
  <Text
    style={
      Array [
        Object {
          "color": "#FFFFFF",
          "fontWeight": "bold",
        },
      ]
    }
  >
    1 page
  </Text>
  <View
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
        },
      ]
    }
  >
    <View
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 12,
          "justifyContent": "center",
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 10,
          "paddingRight": 10,
          "paddingTop": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 20,
            },
            undefined,
            Object {
              "fontFamily": "Material Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders correctly handleIssuesList(gettingData: true, issues: []) 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "marginTop": 70,
      },
    ]
  }
>
  <ActivityIndicator
    size="large"
  />
</View>
`;

exports[`renders correctly issues list item icon 1`] = `
<Text
  allowFontScaling={false}
  style={
    Array [
      Object {
        "color": "#438440",
        "fontSize": 20,
      },
      undefined,
      Object {
        "fontFamily": "FontAwesome",
        "fontStyle": "normal",
        "fontWeight": "normal",
      },
      Object {},
    ]
  }
>
  
</Text>
`;

exports[`renders correctly issues list item icon with state: closed 1`] = `
<Text
  allowFontScaling={false}
  style={
    Array [
      Object {
        "color": "#9a76ef",
        "fontSize": 20,
      },
      undefined,
      Object {
        "fontFamily": "Ionicons",
        "fontStyle": "normal",
        "fontWeight": "normal",
      },
      Object {},
    ]
  }
>
  
</Text>
`;

exports[`renders correctly issues list item icon with state: closed, pull request 1`] = `
<Text
  allowFontScaling={false}
  style={
    Array [
      Object {
        "color": "#f24141",
        "fontSize": 20,
      },
      undefined,
      Object {
        "fontFamily": "Ionicons",
        "fontStyle": "normal",
        "fontWeight": "normal",
      },
      Object {},
    ]
  }
>
  
</Text>
`;

exports[`renders correctly issues list item icon with state: closed, pull request merged at 1`] = `
<Text
  allowFontScaling={false}
  style={
    Array [
      Object {
        "color": "#9a76ef",
        "fontSize": 20,
      },
      undefined,
      Object {
        "fontFamily": "Ionicons",
        "fontStyle": "normal",
        "fontWeight": "normal",
      },
      Object {},
    ]
  }
>
  
</Text>
`;

exports[`renders correctly issues list item icon with state: open 1`] = `
<Text
  allowFontScaling={false}
  style={
    Array [
      Object {
        "color": "#438440",
        "fontSize": 20,
      },
      undefined,
      Object {
        "fontFamily": "FontAwesome",
        "fontStyle": "normal",
        "fontWeight": "normal",
      },
      Object {},
    ]
  }
>
  
</Text>
`;

exports[`renders correctly issues list item icon with state: open, draft: true 1`] = `
<Text
  allowFontScaling={false}
  style={
    Array [
      Object {
        "color": "#94988e",
        "fontSize": 20,
      },
      undefined,
      Object {
        "fontFamily": "Ionicons",
        "fontStyle": "normal",
        "fontWeight": "normal",
      },
      Object {},
    ]
  }
>
  
</Text>
`;

exports[`renders correctly issues list item icon with state: open, pull request 1`] = `
<Text
  allowFontScaling={false}
  style={
    Array [
      Object {
        "color": "#438440",
        "fontSize": 20,
      },
      undefined,
      Object {
        "fontFamily": "Ionicons",
        "fontStyle": "normal",
        "fontWeight": "normal",
      },
      Object {},
    ]
  }
>
  
</Text>
`;
